# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.
name: Tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  schedule:
    - cron: "53 0 * * *" # Daily at 00:53 UTC
  # Triggered on push to branch "main" by .github/workflows/release.yaml
  workflow_call:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install tox
        run: pipx install tox
      - name: Run linters
        run: tox run -e lint

  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install tox
        run: pipx install tox
      - name: Run tests
        run: tox run -e unit

  terraform-test:
    name: Terraform - Lint and Simple Deployment
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: lint charm module
        run: |
          pushd ./terraform
          terraform init
          terraform fmt
          terraform validate
          pushd ./tests
          terraform init
          terraform fmt
          terraform validate
          popd
          popd
      - name: run checks - prepare
        run: |
          sudo snap install juju --channel=3.6/beta --classic
          sudo snap install juju-wait --channel=latest/stable --classic
          sudo snap install jq
      - name: LXD setup
        run: |
          sudo snap refresh lxd --channel=latest/stable
          sudo adduser "$USER" 'lxd'
          # `newgrp` does not work in GitHub Actions; use `sg` instead
          sg 'lxd' -c "lxd waitready"
          sg 'lxd' -c "lxd init --auto"
          sg 'lxd' -c "lxc network set lxdbr0 ipv6.address none"
          sudo iptables -F FORWARD
          sudo iptables -P FORWARD ACCEPT
      - name: Juju setup
        run: |
          sg 'lxd' -c "juju bootstrap 'localhost' --config model-logs-size=10G"
          juju model-defaults logging-config='<root>=INFO; unit=DEBUG'
          juju add-model test
      - name: Terraform deploy
        run: |
          pushd ./terraform/tests/
          TF_VAR_model_name="test" terraform apply -target null_resource.simple_kraft_deployment_juju_wait_deployment -auto-approve
          popd

  sync-docs:
    if: ${{ github.event_name != 'pull_request' || startsWith(github.event.pull_request.head.repo.full_name, 'canonical/') }}
    uses: ./.github/workflows/sync_docs.yaml
    secrets: inherit
    permissions:
      contents: write # Needed to update tags
      pull-requests: write # Need to create PR

  build:
    name: Build charms
    uses: canonical/data-platform-workflows/.github/workflows/build_charm.yaml@v22.0.0
    with:
      cache: true
      path-to-charm-directory: ${{ matrix.path }}
    strategy:
      matrix:
        path:
          - .
          - tests/integration/app-charm

  integration-test:
    strategy:
      fail-fast: false
      matrix:
        tox-environments:
          - integration-charm
          - integration-provider
          - integration-scaling
          - integration-password-rotation
          - integration-tls
          - integration-upgrade
          - integration-balancer-single
          - integration-balancer-multi
          - integration-kraft-single
          - integration-kraft-multi
    name: ${{ matrix.tox-environments }}
    needs:
      - lint
      - unit-test
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 240
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: lxd
          juju-channel: 3.4/stable
          bootstrap-options: "--agent-version 3.4.2"
      - name: Download packed charm(s)
        uses: actions/download-artifact@v4
        with:
          pattern: packed-charm-cache-true-*
          merge-multiple: true
      - name: Select tests
        id: select-tests
        run: |
          if [ "${{ github.event_name }}" == "schedule" ]
          then
            echo Running unstable and stable tests
            echo "mark_expression=" >> $GITHUB_OUTPUT
          else
            echo Skipping unstable tests
            echo "mark_expression=not unstable" >> $GITHUB_OUTPUT
          fi
      - name: Run integration tests
        run: tox run -e ${{ matrix.tox-environments }} -- -m '${{ steps.select-tests.outputs.mark_expression }}'
        env:
          CI_PACKED_CHARMS: ${{ needs.build.outputs.charms }}

  integration-test-ha:
    strategy:
      fail-fast: false
      matrix:
        tox-environments:
          - integration-ha
    name: ${{ matrix.tox-environments }}
    needs:
      - lint
      - unit-test
      - build
      - integration-test
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: lxd
          juju-channel: 3.4/stable
          bootstrap-options: "--agent-version 3.4.2"
      - name: Download packed charm(s)
        uses: actions/download-artifact@v4
        with:
          pattern: packed-charm-cache-true-*
          merge-multiple: true
      - name: Select tests
        id: select-tests
        run: |
          if [ "${{ github.event_name }}" == "schedule" ]
          then
            echo Running unstable and stable tests
            echo "mark_expression=" >> $GITHUB_OUTPUT
          else
            echo Skipping unstable tests
            echo "mark_expression=not unstable" >> $GITHUB_OUTPUT
          fi
      - name: Run integration tests
        run: tox run -e ${{ matrix.tox-environments }} -- -m '${{ steps.select-tests.outputs.mark_expression }}' --keep-models
        env:
          CI_PACKED_CHARMS: ${{ needs.build.outputs.charms }}
