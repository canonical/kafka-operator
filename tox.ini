# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, unit

[vars]
application = kafka
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
lib_path = {toxinidir}/lib/charms/kafka
all_path = {[vars]src_path} {[vars]tst_path} 

[testenv]
allowlist_externals = /bin/bash
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS

[testenv:refresh]
description = Short refresh script for charm-dev
commands = 
    /bin/bash -ec "juju destroy-model {[vars]application} --force --destroy-storage --no-wait"
    /bin/bash -ec "juju add-model {[vars]application}"
    /bin/bash -ec "juju deploy zookeeper --channel edge -n 3"
    /bin/bash -ec "charmcraft pack"
    /bin/bash -ec "juju deploy ./*.charm -n 3"
    /bin/bash -ec "juju relate kafka zookeeper"

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    flake8 == 4.0.1
    flake8-docstrings
    flake8-copyright
    flake8-builtins
    pyproject-flake8
    pep8-naming
    isort
    codespell
commands =
    # uncomment the following line if this charm owns a lib
    # codespell {[vars]lib_path}
    codespell {toxinidir}/. --skip {toxinidir}/.git --skip {toxinidir}/.tox \
      --skip {toxinidir}/build --skip {toxinidir}/lib --skip {toxinidir}/venv \
      --skip {toxinidir}/.mypy_cache --skip {toxinidir}/icon.svg
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:unit]
description = Run unit tests
deps =
    pytest
    coverage[toml]
    -r{toxinidir}/requirements.txt
commands =
    coverage run --source={[vars]src_path} \
        -m pytest --ignore={[vars]tst_path}integration -v --tb native -s {posargs}
    coverage report

[testenv:integration]
description = Run integration tests
deps =
    pytest
    juju
    pytest-operator
    kazoo
    tenacity
    pure-sasl
    kafka-python
    -r{toxinidir}/requirements.txt
commands =
    pytest -vv --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs}

[testenv:integration-charm]
description = Run base integration tests
deps =
    pytest
    juju
    pytest-operator
    kazoo
    tenacity
    pure-sasl
    kafka-python
    -r{toxinidir}/requirements.txt
commands =
    pytest tests/integration/test_charm.py -vv --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs}

[testenv:integration-provider]
description = Run integration tests for provider
deps =
    pytest
    juju
    pytest-operator
    kazoo
    tenacity
    pure-sasl
    kafka-python
    -r{toxinidir}/requirements.txt
commands =
    pytest tests/integration/test_provider.py -vv --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs}

[testenv:integration-scaling]
description = Run scaling integration tests
deps =
    pytest
    juju
    pytest-operator
    kazoo
    tenacity
    pure-sasl
    kafka-python
    -r{toxinidir}/requirements.txt
commands =
    pytest tests/integration/test_scaling.py -vv --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs}

[testenv:integration-password-rotation]
description = Run password rotation integration tests
deps =
    pytest
    juju
    pytest-operator
    kazoo
    tenacity
    pure-sasl
    kafka-python
    -r{toxinidir}/requirements.txt
commands =
    pytest tests/integration/test_password_rotation.py -vv --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs}

[testenv:integration-tls]
description = Run TLS integration tests
deps =
    pytest
    juju
    pytest-operator
    kazoo
    tenacity
    pure-sasl
    kafka-python
    -r{toxinidir}/requirements.txt
commands =
    pytest tests/integration/test_tls.py -vv --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs}
